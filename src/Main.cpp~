#include "DemoServer.h"
using namespace std;

int main(int argc, char* argv[])
{
  
  //if(daemon(0,0)==-1)
  // {
  // LOG_SYSFATAL<<"daemon()";
  // }
  if(mysql_thread_safe())
    {
      debugPrint("the mysql client library is thread safe\n");
      int aa=10;
      string ss("ss");
      debugPrint("%s num is %d\n",ss.c_str(),aa);
    }
  else
    {
      LOG_FATAL<<"the mysql client library is NOT thread safe";
    }
 
  if(mysql_library_init(0,NULL,NULL))//mysql_library_init() is not thread safe,call it prior to spawning any threads;
    {
      LOG_FATAL<<"could not initialize mysql library";
    }
  //our anti-piracy strategy handles "one clientID with one connection" situation.It is UNDEFINED in other situation!
  bool isAntiPiracy=true;
  int numThreads=3;
  int idleSeconds=3600;
  LOG_INFO << "pid = " << getpid();
  muduo::net::EventLoop loop;
  muduo::net::InetAddress listenAddr(2007);
  dsrv::MysqlConnInfo mysqlConnInfo("localhost","root","cita109109","demoDB");
  
  dsrv::DemoServer server(&loop, listenAddr,numThreads,isAntiPiracy,idleSeconds,mysqlConnInfo);
  server.start();
  loop.loop();

  mysql_library_end();
}
